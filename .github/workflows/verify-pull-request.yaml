name: Verify pull requests

on:
  pull_request:
    branches:
      - main
      - main-*
      - feature/**

jobs:
  style_check:
    name: Style/Format check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout git repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Commit Linter
      uses: wagoid/commitlint-github-action@v5
      with:
        configFile: .github/commitlint.config.js

  build_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract commit info
        id: commit_info
        run: |
          short_sha="$(git rev-parse --short $GITHUB_SHA)"
          branch_name="pr$(echo $GITHUB_REF | sed -e 's/refs\/pull\/\(.*\)\/merge/\1/')"
          echo "short_sha=$short_sha" >> $GITHUB_OUTPUT
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Generate version
        id: versioning
        uses: PaulHatch/semantic-version@v4.0.3
        with:
          major_pattern: "/^((fix)|(feat)|(perf))(\\([a-z]+\\))?!:/"
          minor_pattern: "/^((fix)|(feat)|(perf))(\\([a-z]+\\))?:/"
          format: "${major}.${minor}.${patch}-${{ steps.commit_info.outputs.branch_name }}.${increment}"

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '8'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle2-${{ hashFiles('**/build.gradle', '**/build.properties', '**/gradle.properties', '**/gradle-wrapper.properties') }}

      - name: Build with Gradle
        run: ./gradlew build # TODO test
        env:
          AUTO_GENERATED_VERSION: ${{ steps.versioning.outputs.version }}

      - name: Cleanup Gradle Cache
        # These files shouldn't be cached according to https://docs.github.com/en/actions/guides/building-and-testing-java-with-gradle
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: project-red-${{ steps.versioning.outputs.version }}
          path: '*/build/libs/ProjectRed-*.jar'
