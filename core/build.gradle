plugins {
    id 'net.neoforged.gradle.userdev'
}

String mod_id = 'projectred_core'

// Include all sources from API project
sourceSets.main.java.srcDirs += ['../api/src/main/java']

minecraft {
    accessTransformers.file file("src/main/resources/META-INF/accesstransformer.cfg")
}

runs {
    data {
        systemProperty 'mixin.env.remapRefMap', 'true'
        systemProperty 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

        workingDirectory file('run')
        programArguments.addAll '--mod', mod_id, '--all', '--output', file("src/main/generated"), '--existing', file("src/main/resources")
        modSource sourceSets.main
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${forge_version}"

    implementation "io.codechicken:CodeChickenLib:${mc_version}-${ccl_version}"
    implementation "io.codechicken:CBMultipart:${mc_version}-${cbm_version}"

    // JEI
    compileOnly("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    compileOnly("mezz.jei:jei-${mc_version}-neoforge-api:${jei_version}")
    runtimeOnly("mezz.jei:jei-${mc_version}-neoforge:${jei_version}")

    // CCTweaked
    // compileOnly("cc.tweaked:cc-tweaked-${mc_version}-core-api:${cct_version}")
    // compileOnly(fg.deobf("cc.tweaked:cc-tweaked-${mc_version}-forge-api:${cct_version}"))
    // runtimeOnly(fg.deobf("cc.tweaked:cc-tweaked-${mc_version}-forge:${cct_version}"))

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

