import java.time.Instant
plugins {
    id 'java'
    id 'maven-publish'
}

// Get mod version from CI, else suffix a timestamp (calculated here bc timestamp can change if done separately in each subproject)
mod_version = System.getenv("AUTO_GENERATED_VERSION") ?: "${mod_version}.${Instant.now().getEpochSecond()}"
group = 'mrtjp'
version = "${mc_version}-${mod_version}"

println "Starting build of ${name}, Version: ${mod_version}"
println "Using Forge: ${forge_version}, for Minecraft: ${mc_version}, with Mappings: ${mcp_mappings}"

// Common submodule configurations
subprojects { p ->

    // Needs to be force-applied here to allow below configuration
    apply plugin: 'java'

    // Select Java version
    java.toolchain.languageVersion = JavaLanguageVersion.of(java_lang_version)

    // Copy properties from root
    group = rootProject.group
    mod_version = rootProject.mod_version
    version = rootProject.version

    // ForgeGradle version settings
    archivesBaseName = rootProject.name

    // Jar settings
    jar {
        archiveClassifier = p.name
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }

    // Add datagen resources to source set
    sourceSets.main.resources.srcDirs += "src/main/generated"

    // Add default repositories
    repositories {
        mavenLocal()
        maven { url = "https://proxy-maven.covers1624.net/" }
        maven { url = "https://squiddev.cc/maven/" }
    }

    // Replace version tokens in mods.toml
    processResources {
        inputs.property 'mod_version', mod_version
        inputs.property 'mc_version', mc_version

        filesMatching('META-INF/mods.toml') {
            expand 'file': ['jarVersion': mod_version],
                    'mc_version': mc_version,
                    'forge_version': forge_version,
                    'lang_version': forge_version.split('\\.')[0],
                    'ccl_version': ccl_version,
                    'cbm_version': cbm_version,
                    'cct_version': cct_version
        }
    }
}

publishing {
    repositories {
        maven {
            url "https://nexus.covers1624.net/repository/maven-releases/"
            credentials {
                username System.getenv('MAVEN_USER')
                password System.getenv('MAVEN_PASS')
            }
        }
    }
    publications {
        ProjectRed(MavenPublication) {
            artifact project(':core').jar
            artifact project(':expansion').jar
            artifact project(':exploration').jar
            artifact project(':illumination').jar
            artifact project(':integration').jar
            artifact project(':transmission').jar

            pom {
                name = rootProject.name
                description = rootProject.name

                url = 'https://github.com/MrTJP/ProjectRed'
                scm {
                    url = 'https://github.com/MrTJP/ProjectRed'
                    connection = 'scm:git:git://github.com/MrTJP/ProjectRed.git'
                    connection = 'scm:git:git@github.com:MrTJP/ProjectRed.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MrTJP/ProjectRed/issues'
                }
                developers {
                    developer {
                        id = 'mrtjp'
                        name = 'mrtjp'
                    }
                    developer {
                        id = 'Chicken-Bones'
                        name = 'Chicken-Bones'
                    }
                    developer {
                        id = 'covers1624'
                        name = 'covers1624'
                    }
                }
            }
        }
    }
}
